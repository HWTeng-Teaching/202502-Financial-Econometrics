# 設定資料集的 URL
url <- "https://www.principlesofeconometrics.com/poe5/data/rdata/cex5_small.rdata"
download.file(url, destfile = "cex5_small.rdata")  # 下載資料集並儲存為本地檔案
load("cex5_small.rdata")  # 載入資料集
names(cex5_small)  # 確認變數名稱

# 載入必要的套件
library(ggplot2)
library(moments)  # 計算偏態（Skewness）與峰度（Kurtosis）
library(tseries)  # 執行 Jarque–Bera 常態性檢定

# 讀取數據 (已載入 cex5_small.rdata)
data <- cex5_small  # 使用簡單變數名稱

# 4.29(a)
# 計算描述統計量
summary_stats <- function(x) {
  return(c(N = sum(!is.na(x)),
           Mean = mean(x, na.rm = TRUE),
           Median = median(x, na.rm = TRUE),
           Min = min(x, na.rm = TRUE),
           Max = max(x, na.rm = TRUE),
           SD = sd(x, na.rm = TRUE)))
}

food_stats <- summary_stats(data$food)
income_stats <- summary_stats(data$income)

# 顯示描述統計量
stats_table <- data.frame(Food = food_stats,
                          Income = income_stats)
print(stats_table)

# 繪製直方圖（標示平均數與中位數）
plot_histogram <- function(data, var_name) {
  mean_val <- mean(data, na.rm = TRUE)
  median_val <- median(data, na.rm = TRUE)
  ggplot(data.frame(x = data), aes(x = x)) +
    geom_histogram(aes(y = after_stat(density)), bins = 30, fill = "blue", alpha = 0.5, color = "black") +
    geom_vline(aes(xintercept = mean_val, color = "Mean"), linetype = "dashed", linewidth = 1) +
    geom_vline(aes(xintercept = median_val, color = "Median"), linetype = "dashed", linewidth = 1) +
    scale_color_manual(name = "Statistics", values = c("Mean" = "red", "Median" = "green")) +
    labs(title = paste("Histogram of", var_name),
         x = var_name, y = "Density") +
    theme_minimal()
}

plot_histogram(data$food, "Food")  # 繪製 food 直方圖
plot_histogram(data$income, "Income")  # 繪製 income 直方圖

# Jarque-Bera 常態性檢定
jarque.bera.test(cex5_small$food)
jarque.bera.test(cex5_small$income)

# 4.29(b)
# 執行線性回歸：FOOD = β1 + β2 * INCOME + e
lm_model <- lm(food ~ income, data = data)
summary(lm_model)  # 顯示線性回歸的回歸結果

# 提取 β2（income 的迴歸係數）的 95% 信賴區間
conf_interval <- confint(lm_model, level = 0.95)  
print(conf_interval)

# 繪製線性回歸的散佈圖與回歸線
ggplot(data, aes(x = income, y = food)) +
  geom_point(alpha = 0.5, color = "blue") +  # 繪製資料點
  geom_smooth(method = "lm", color = "red", se = FALSE) +  # 添加回歸線
  labs(title = "Linear Model: FOOD vs INCOME",
       x = "Income", y = "Food Expenditure") +
  theme_minimal()


# 4.29(c)
# 計算線性回歸的殘差
residuals_lm <- resid(lm_model)  # 取得最小平方法殘差

# 繪製線性回歸的殘差散佈圖
ggplot(data, aes(x = income, y = residuals_lm)) +
  geom_point(alpha = 0.5, color = "blue") +  # 散佈圖
  labs(title = "Plot of Residuals (Linear Model) ",
       x = "Income", y = "Residuals") +
  theme_minimal()

# 繪製線性回歸的殘差直方圖
ggplot(data.frame(residuals_lm), aes(x = residuals_lm)) +
  geom_histogram(aes(y = after_stat(density)), bins = 30, fill = "blue", alpha = 0.5, color = "black") +
  geom_vline(aes(xintercept = mean(residuals_lm), color = "Mean"), linetype = "dashed", linewidth = 1) +
  geom_vline(aes(xintercept = median(residuals_lm), color = "Median"), linetype = "dashed", linewidth = 1) +
  scale_color_manual(name = "Statistics", values = c("Mean" = "red", "Median" = "green")) +
  labs(title = "Histogram of Residuals (Linear Model)",
       x = "Residuals", y = "Density") +
  theme_minimal()

# 計算 Skewness（偏態）與 Kurtosis（峰度）
skewness_value_lm <- skewness(residuals_lm)  # 偏態
kurtosis_value_lm <- kurtosis(residuals_lm)  # 峰度
cat("Skewness:", skewness_value_lm, "\n")
cat("Kurtosis:", kurtosis_value_lm, "\n")

# 進行 Jarque-Bera 常態性檢定
jarque.bera.test(residuals_lm)

# 4.29(d)
# 指定不同的 INCOME 水準
income_values <- data.frame(income = c(19, 65, 160))

# 計算預測食品支出及其信賴區間
predictions_linear <- predict(lm_model, newdata = income_values, interval = "confidence", level = 0.95)

beta2 <- coef(lm_model)["income"]  # 取出 β2（income 的迴歸係數）
beta2_se <- summary(lm_model)$coefficients["income", "Std. Error"]  # 取出 β2 標準誤
elasticity_point <- beta2 * income_values$income / predictions_linear[, "fit"]  # 計算彈性 (ε̂)
elasticity_se <- beta2_se * income_values$income / predictions_linear[, "fit"]  # 計算彈性標準誤 (se(ε̂))

# 計算 95% 信賴區間 (LB, UB)
z_value <- qnorm(0.975)  # 95% 信賴區間的 z 值
elasticity_lower <- elasticity_point - z_value * elasticity_se
elasticity_upper <- elasticity_point + z_value * elasticity_se

# 建立結果表格
elasticity_table_lm <- data.frame(
  INCOME = income_values$income,
  FOOD_hat = predictions_linear[, "fit"],
  ε = elasticity_point,
  se_ε = elasticity_se,
  ε_lower_bound = elasticity_lower,
  ε_upper_bound = elasticity_upper
)
print(elasticity_table_lm)


# 4.29(e)
# 取對數轉換變數，並移除 FOOD 或 INCOME 為 0 的觀測值，以避免 log(0) 問題
data_log <- subset(data, food > 0 & income > 0)  # 確保沒有 0 值
data_log$ln_food <- log(data_log$food)
data_log$ln_income <- log(data_log$income)

# 執行對數-對數回歸
log_log_model <- lm(ln_food ~ ln_income, data = data_log)
summary(log_log_model)  # 顯示回歸結果
data_log$food_pred <- exp(predict(log_log_model, newdata = data_log))  # 取得預測值轉換回原始尺度

# 繪製對數-對數散佈圖與最小平方法回歸線
ggplot(data_log, aes(x = income, y = food)) +
  geom_point(alpha = 0.5, color = "blue") +  # 繪製資料點
  geom_line(aes(y = food_pred), color = "red", linewidth = 1) +  # 添加來自對數模型的回歸線
  labs(title = "Log-Log Model: FOOD vs INCOME",
       x = "Income", y = "Food Expenditure") +
  theme_minimal()

# 計算 Generalized R²
generalized_r2_corr <- function(actual, predicted) {
  r_g <- cor(actual, predicted)^2  # 計算相關係數平方
  return(r_g)
}
# 計算 Log-Log Model 的 Generalized R²
generalized_r2_log_log <- generalized_r2_corr(data_log$food, data_log$food_pred)  

r2_linear <- summary(lm_model)$r.squared    # 取得線性模型的 R^2
r2_log_log <- summary(log_log_model)$r.squared    # 取得 Log-Log Model 的 R^2
r2_comparison_e <- data.frame(    # 建立數據框做比較
  Model = c("Linear Model", "Log-Log Model"),
  R2 = c(r2_linear, r2_log_log),
  Generalized_R2 = c(NA, generalized_r2_log_log)    # 線性模型沒有 Generalized R^2，因此填入 NA
)
print(r2_comparison_e)


# 4.29(f)
# 取得 ln(INCOME) 變數的回歸係數（即彈性估計值）
elasticity_estimate <- coef(log_log_model)["ln_income"]

# 計算 95% 信賴區間
elasticity_ci <- confint(log_log_model, level = 0.95)["ln_income", ]

# 建立彈性結果表格
elasticity_table_loglog <- data.frame(
  Elasticity = round(elasticity_estimate, 4),  # 彈性點估計值
  ε_Lower_Bound = round(elasticity_ci[1], 4),  # 95% 信賴區間下界
  ε_Upper_Bound = round(elasticity_ci[2], 4)   # 95% 信賴區間上界
)
print(elasticity_table_loglog)


# 4.29(g)
# 計算殘差（log-log 模型的最小平方法殘差）
data_log$residuals_loglog <- residuals(log_log_model)

# 繪製殘差對 ln(INCOME) 的散佈圖
ggplot(data_log, aes(x = ln_income, y = residuals_loglog)) +
  geom_point(alpha = 0.5, color = "blue") +
  labs(title = "Plot of Residuals (Log-Log Model)",
       x = "ln(INCOME)", y = "Residuals") +
  theme_minimal()

# 繪製殘差直方圖
ggplot(data_log, aes(x = residuals_loglog)) +
  geom_histogram(aes(y = after_stat(density)), bins = 30, fill = "blue", alpha = 0.5, color = "black") +
  geom_vline(aes(xintercept = mean(residuals_loglog), color = "Mean"), linetype = "dashed") +  # 均值
  geom_vline(aes(xintercept = median(residuals_loglog), color = "Median"), linetype = "dashed") +  # 中位數
  scale_color_manual(name = "Statistics", values = c("Mean" = "red", "Median" = "green")) +
  labs(title = "Histogram of Residuals (Log-Log Model)",
       x = "Residuals", y = "Density") +
  theme_minimal()

# 計算 Skewness（偏態）與 Kurtosis（峰度）
skewness_value_loglog <- skewness(data_log$residuals_loglog)  # 偏態
kurtosis_value_loglog <- kurtosis(data_log$residuals_loglog)  # 峰度
cat("Skewness:", skewness_value_loglog, "\n")
cat("Kurtosis:", kurtosis_value_loglog, "\n")

# Jarque-Bera 正態性檢定
jarque.bera.test(data_log$residuals_loglog)


# 4.29(h)
# 確保 INCOME 為正值，避免 log(0) 問題
data_linear_log <- subset(data, income > 0)
data_linear_log$ln_income <- log(data_linear_log$income)  # 取 INCOME 的對數

# 執行線性-對數回歸
linear_log_model <- lm(food ~ ln_income, data = data_linear_log)
summary(linear_log_model)

# 繪製線性-對數散佈圖與最小平方法回歸線
ggplot(data_linear_log, aes(x = income, y = food)) +
  geom_point(alpha = 0.5, color = "blue") +  # 繪製資料點
  geom_line(aes(y = predict(linear_log_model)), color = "red", linewidth = 1) +  # 添加回歸線
  labs(title = "Linear-Log Model: FOOD vs INCOME",
       x = "Income", y = "Food Expenditure") +
  theme_minimal()

r2_linear_log <- summary(linear_log_model)$r.squared  # 取得 Linear-Log Model 的 R² 
r2_comparison_h <- data.frame(  # 建立比較表
  Model = c("Linear Model", "Log-Log Model(Generalized R²)", "Linear-Log Model"),
  R2 = c(r2_linear, generalized_r2_log_log, r2_linear_log)
)
print(r2_comparison_h)


# 4.29(i)
# 設定要估計的 INCOME 值
income_values_i <- data.frame(
  income = c(19, 65, 160),  # 原始收入值
  ln_income = log(c(19, 65, 160))  # 轉換為對數收入
)

# 使用 predict() 來獲取預測 FOOD 值（預測的 y 值）
predictions_i <- predict(linear_log_model, newdata = income_values_i, se.fit = TRUE)
# 取得點估計值（Point Estimate）
predictions_fit_i <- predictions_i$fit  # 預測的 FOOD 值（不是 log scale）
beta2_i <- coef(linear_log_model)["ln_income"]  # 取出 β2（ln_income 的回歸係數）
beta2_se_i <- summary(linear_log_model)$coefficients["ln_income", "Std. Error"]  # 取出 β2 標準誤

elasticity_point_i <- beta2_i / predictions_fit_i  # 計算彈性
predictions_se_i <- predictions_i$se.fit  # 取得 FOOD 預測的標準誤
elasticity_se_i <- beta2_se_i / predictions_fit_i  # 計算彈性標準誤

# 計算 95% 信賴區間 (LB, UB)
z_value <- qnorm(0.975)  # 95% 信賴區間的 z 值
elasticity_lower_i <- elasticity_point_i - z_value * elasticity_se_i
elasticity_upper_i <- elasticity_point_i + z_value * elasticity_se_i

# 建立結果表格
elasticity_table_i <- data.frame(
  INCOME = income_values_i$income,
  FOOD_hat = predictions_fit_i,
  ε = elasticity_point_i,
  se_ε = elasticity_se_i,
  ε_lower_bound = elasticity_lower_i,
  ε_upper_bound = elasticity_upper_i
)
print(elasticity_table_i)


# 4.29(j)
# 取得 linear-log 模型的殘差
data_linear_log$residuals_linear_log <- residuals(linear_log_model)  # 計算殘差
data_linear_log$ln_income <- log(data_linear_log$income)  # 計算 ln(INCOME)

# 繪製殘差與 ln(INCOME) 之間的散佈圖
ggplot(data_linear_log, aes(x = ln_income, y = residuals_linear_log)) +
  geom_point(alpha = 0.5, color = "blue") +
  labs(title = "Plot of Residuals (Linear-Log Model)",
       x = "ln(INCOME)", y = "Residuals") +
  theme_minimal()

# 繪製殘差直方圖
ggplot(data_linear_log, aes(x = residuals_linear_log)) +
  geom_histogram(aes(y = after_stat(density)), bins = 30, fill = "blue", alpha = 0.5, color = "black") +
  geom_vline(aes(xintercept = mean(residuals_linear_log), color = "Mean"), linetype = "dashed") +  # 平均值
  geom_vline(aes(xintercept = median(residuals_linear_log), color = "Median"), linetype = "dashed") +  # 中位數
  scale_color_manual(name = "Statistics", values = c("Mean" = "red", "Median" = "green")) +
  labs(title = "Histogram of Residuals (Linear-Log Model)",
       x = "Residuals", y = "Density") +
  theme_minimal()

# 計算 Skewness 和 Kurtosis
skewness_value <- skewness(data_linear_log$residuals_linear_log)
kurtosis_value <- kurtosis(data_linear_log$residuals_linear_log)
cat("Skewness:", skewness_value, "\n")
cat("Kurtosis:", kurtosis_value, "\n")

# Jarque–Bera 正態性檢定
jarque.bera.test(data_linear_log$residuals_linear_log)

